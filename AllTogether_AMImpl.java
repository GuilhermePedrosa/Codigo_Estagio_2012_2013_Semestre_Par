package GC.model.app;


import GC.model.app.common.AllTogether_AM;

import GC.model.view.ContactosPorEmpresa_VOImpl;

import com.cs.blog.core.model.sproc.IStoredProc;

import com.cs.blog.core.model.sproc.StoredProc;

import oracle.binding.BindingContainer;

import oracle.adf.model.BindingContext;

import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 29 12:24:53 BST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AllTogether_AMImpl extends ApplicationModuleImpl implements AllTogether_AM {
    /**
     * This is the default constructor (do not remove).
     */
    public AllTogether_AMImpl() {
    }

    /**
     * Container's getter for Classificacao1.
     * @return Classificacao1
     */
    public ViewObjectImpl getClassificacao1() {
        return (ViewObjectImpl)findViewObject("Classificacao1");
    }

    /**
     * Container's getter for ContactosPorEmpresa1.
     * @return ContactosPorEmpresa1
     */
    public ViewObjectImpl getContactosPorEmpresa1() {
        return (ViewObjectImpl)findViewObject("ContactosPorEmpresa1");
    }

    /**
     * Container's getter for Contactos1.
     * @return Contactos1
     */
    public ViewObjectImpl getContactos1() {
        return (ViewObjectImpl)findViewObject("Contactos1");
    }

    /**
     * Container's getter for Empresa1.
     * @return Empresa1
     */
    public ViewObjectImpl getEmpresa1() {
        return (ViewObjectImpl)findViewObject("Empresa1");
    }

    /**
     * Container's getter for Instalacoes1.
     * @return Instalacoes1
     */
    public ViewObjectImpl getInstalacoes1() {
        return (ViewObjectImpl)findViewObject("Instalacoes1");
    }

    /**
     * Container's getter for Morada1.
     * @return Morada1
     */
    public ViewObjectImpl getMorada1() {
        return (ViewObjectImpl)findViewObject("Morada1");
    }

    /**
     * Container's getter for TipoArea1.
     * @return TipoArea1
     */
    public ViewObjectImpl getTipoArea1() {
        return (ViewObjectImpl)findViewObject("TipoArea1");
    }

    /**
     * Container's getter for TipoClassificacao1.
     * @return TipoClassificacao1
     */
    public ViewObjectImpl getTipoClassificacao1() {
        return (ViewObjectImpl)findViewObject("TipoClassificacao1");
    }

    /**
     * Container's getter for TipoFontes1.
     * @return TipoFontes1
     */
    public ViewObjectImpl getTipoFontes1() {
        return (ViewObjectImpl)findViewObject("TipoFontes1");
    }

    /**
     * Container's getter for TipoMorada1.
     * @return TipoMorada1
     */
    public ViewObjectImpl getTipoMorada1() {
        return (ViewObjectImpl)findViewObject("TipoMorada1");
    }

    /**
     * Container's getter for TipoServico1.
     * @return TipoServico1
     */
    public ViewObjectImpl getTipoServico1() {
        return (ViewObjectImpl)findViewObject("TipoServico1");
    }

    /**
     * Container's getter for TipoTecnologia1.
     * @return TipoTecnologia1
     */
    public ViewObjectImpl getTipoTecnologia1() {
        return (ViewObjectImpl)findViewObject("TipoTecnologia1");
    }

    /**
     * Container's getter for Classificacao2.
     * @return Classificacao2
     */
    public ViewObjectImpl getClassificacao2() {
        return (ViewObjectImpl)findViewObject("Classificacao2");
    }

    /**
     * Container's getter for ContactosPorEmpresa2.
     * @return ContactosPorEmpresa2
     */
    public ViewObjectImpl getContactosPorEmpresa2() {
        return (ViewObjectImpl)findViewObject("ContactosPorEmpresa2");
    }

    /**
     * Container's getter for ContactosPorEmpresa3.
     * @return ContactosPorEmpresa3
     */
    public ViewObjectImpl getContactosPorEmpresa3() {
        return (ViewObjectImpl)findViewObject("ContactosPorEmpresa3");
    }

    /**
     * Container's getter for Instalacoes2.
     * @return Instalacoes2
     */
    public ViewObjectImpl getInstalacoes2() {
        return (ViewObjectImpl)findViewObject("Instalacoes2");
    }

    /**
     * Container's getter for Instalacoes3.
     * @return Instalacoes3
     */
    public ViewObjectImpl getInstalacoes3() {
        return (ViewObjectImpl)findViewObject("Instalacoes3");
    }

    /**
     * Container's getter for Classificacao3.
     * @return Classificacao3
     */
    public ViewObjectImpl getClassificacao3() {
        return (ViewObjectImpl)findViewObject("Classificacao3");
    }

    /**
     * Container's getter for Classificacao4.
     * @return Classificacao4
     */
    public ViewObjectImpl getClassificacao4() {
        return (ViewObjectImpl)findViewObject("Classificacao4");
    }

    /**
     * Container's getter for Morada2.
     * @return Morada2
     */
    public ViewObjectImpl getMorada2() {
        return (ViewObjectImpl)findViewObject("Morada2");
    }

    /**
     * Container's getter for Classificacao5.
     * @return Classificacao5
     */
    public ViewObjectImpl getClassificacao5() {
        return (ViewObjectImpl)findViewObject("Classificacao5");
    }

    /**
     * Container's getter for TipoTecnologia2.
     * @return TipoTecnologia2
     */
    public ViewObjectImpl getTipoTecnologia2() {
        return (ViewObjectImpl)findViewObject("TipoTecnologia2");
    }

    /**
     * Container's getter for Empresa_Contactos_P_Empresa1.
     * @return Empresa_Contactos_P_Empresa1
     */
    public ViewObjectImpl getEmpresa_Contactos_P_Empresa1() {
        return (ViewObjectImpl)findViewObject("Empresa_Contactos_P_Empresa1");
    }

    /**
     * Container's getter for Empresa_Contactos_P_Empresa2.
     * @return Empresa_Contactos_P_Empresa2
     */
    public ViewObjectImpl getEmpresa_Contactos_P_Empresa2() {
        return (ViewObjectImpl)findViewObject("Empresa_Contactos_P_Empresa2");
    }

    /**
     * Container's getter for Instalacoes_Moradas1.
     * @return Instalacoes_Moradas1
     */
    public ViewObjectImpl getInstalacoes_Moradas1() {
        return (ViewObjectImpl)findViewObject("Instalacoes_Moradas1");
    }

    /**
     * Container's getter for Instalacoes_Moradas2.
     * @return Instalacoes_Moradas2
     */
    public ViewObjectImpl getInstalacoes_Moradas2() {
        return (ViewObjectImpl)findViewObject("Instalacoes_Moradas2");
    }

    /**
     * Container's getter for ClassificacaoContactoFk_VL1.
     * @return ClassificacaoContactoFk_VL1
     */
    public ViewLinkImpl getClassificacaoContactoFk_VL1() {
        return (ViewLinkImpl)findViewLink("ClassificacaoContactoFk_VL1");
    }

    /**
     * Container's getter for ContactosPorEmpresaFk_VL1.
     * @return ContactosPorEmpresaFk_VL1
     */
    public ViewLinkImpl getContactosPorEmpresaFk_VL1() {
        return (ViewLinkImpl)findViewLink("ContactosPorEmpresaFk_VL1");
    }

    /**
     * Container's getter for ContactosPorEmpresaFk1_VL1.
     * @return ContactosPorEmpresaFk1_VL1
     */
    public ViewLinkImpl getContactosPorEmpresaFk1_VL1() {
        return (ViewLinkImpl)findViewLink("ContactosPorEmpresaFk1_VL1");
    }

    /**
     * Container's getter for InstalacoesEmpresaFk_VL1.
     * @return InstalacoesEmpresaFk_VL1
     */
    public ViewLinkImpl getInstalacoesEmpresaFk_VL1() {
        return (ViewLinkImpl)findViewLink("InstalacoesEmpresaFk_VL1");
    }

    /**
     * Container's getter for InstalacoesMoradaFk1_VL1.
     * @return InstalacoesMoradaFk1_VL1
     */
    public ViewLinkImpl getInstalacoesMoradaFk1_VL1() {
        return (ViewLinkImpl)findViewLink("InstalacoesMoradaFk1_VL1");
    }

    /**
     * Container's getter for ClassificacaoFk_VL1.
     * @return ClassificacaoFk_VL1
     */
    public ViewLinkImpl getClassificacaoFk_VL1() {
        return (ViewLinkImpl)findViewLink("ClassificacaoFk_VL1");
    }

    /**
     * Container's getter for ClassificacaoTipoFontesFk1_VL1.
     * @return ClassificacaoTipoFontesFk1_VL1
     */
    public ViewLinkImpl getClassificacaoTipoFontesFk1_VL1() {
        return (ViewLinkImpl)findViewLink("ClassificacaoTipoFontesFk1_VL1");
    }

    /**
     * Container's getter for MoradaTipoMoradaFk1_VL1.
     * @return MoradaTipoMoradaFk1_VL1
     */
    public ViewLinkImpl getMoradaTipoMoradaFk1_VL1() {
        return (ViewLinkImpl)findViewLink("MoradaTipoMoradaFk1_VL1");
    }

    /**
     * Container's getter for ClassificacaoTipoServicoFk_VL1.
     * @return ClassificacaoTipoServicoFk_VL1
     */
    public ViewLinkImpl getClassificacaoTipoServicoFk_VL1() {
        return (ViewLinkImpl)findViewLink("ClassificacaoTipoServicoFk_VL1");
    }

    /**
     * Container's getter for TipoTecnologiaTipoTecnFk1_VL1.
     * @return TipoTecnologiaTipoTecnFk1_VL1
     */
    public ViewLinkImpl getTipoTecnologiaTipoTecnFk1_VL1() {
        return (ViewLinkImpl)findViewLink("TipoTecnologiaTipoTecnFk1_VL1");
    }

    /**
     * Container's getter for Contactos_CCE_VL1.
     * @return Contactos_CCE_VL1
     */
    public ViewLinkImpl getContactos_CCE_VL1() {
        return (ViewLinkImpl)findViewLink("Contactos_CCE_VL1");
    }

    /**
     * Container's getter for C_CCE_I_M_VL1.
     * @return C_CCE_I_M_VL1
     */
    public ViewLinkImpl getC_CCE_I_M_VL1() {
        return (ViewLinkImpl)findViewLink("C_CCE_I_M_VL1");
    }

    /**
     * Container's getter for C_CCE_I_M_VL2.
     * @return C_CCE_I_M_VL2
     */
    public ViewLinkImpl getC_CCE_I_M_VL2() {
        return (ViewLinkImpl)findViewLink("C_CCE_I_M_VL2");
    }

    /*
 * Creation Methods
 */

    /**
     * Method that will create a new row onto the ContactosPorEmpresa View Object
     * Given the determined parameters.
     * @param CID - The contact ID.
     * @param Dep - The department.
     * @param EID - The company ID.
     * @param DataI - The date of the beggining of functions.
     * @param DataF - The date of the end of functions.
     * @param Tel - The phone number.
     * @param Ext - The extention of the phone number
     * @param Fax - The fax number.
     * @param Mail - The professional mail.
     * @param RowId - Unused atribute.
     */
    public void CreateNewContactosPorEmpresa(Number CID, String Dep, Number EID, Date DataI, Date DataF, String Tel,
                                             String Ext, String Fax, String Mail, Number RowId) {
        ViewObjectImpl CE = this.getContactosPorEmpresa1();
        Row CERow = CE.createRow();
        CERow.setAttribute("ContactoId", CID);
        CERow.setAttribute("EmpresaId", EID);
        CERow.setAttribute("DataInicio", DataI);
        CERow.setAttribute("DataFim", DataF);
        CERow.setAttribute("Departamento", Dep);
        CERow.setAttribute("Telefone", Tel);
        CERow.setAttribute("Extensao", Ext);
        CERow.setAttribute("Fax", Fax);
        CERow.setAttribute("Mail", Mail);
        CE.insertRow(CERow);
        CE.getDBTransaction().commit();
    }

    /**
     * Method that will create and insert a new row onto the Instalação ViewObject
     * @param MID - The adress ID.
     * @param EID - The company ID.
     * @param status - The status of the local.
     */
    public void CreateNewInstalacao(Number MID, Number EID, String status) {
        ViewObjectImpl Inst = this.getInstalacoes1();
        Row IRow = Inst.createRow();
        IRow.setAttribute("EmpresaId", EID);
        IRow.setAttribute("MoradaId", MID);
        IRow.setAttribute("Status", status);
        Inst.insertRow(IRow);
        Inst.getDBTransaction().commit();
    }

    /*
 * End of Creation Methods
 */

    /*
 * Undo Methods
 */

    /**
     * This method is responsable to undo every created entity in the contact creation process.
     */
    public void UndoCreation() {
        ViewObjectImpl C = this.getContactos1();
        Row CRow = C.getCurrentRow();
        ViewObjectImpl E = this.getEmpresa1();
        Row ERow = E.getCurrentRow();
        CRow.remove();
        ERow.remove();
        /* System.out.println("RSI CurrRow: " +CRow.getAttribute("ContactoId").toString()); */
        C.getDBTransaction().commit();
        E.getDBTransaction().commit();
    }

    /**
     * This method is responsable to undo the created contact in the middle of the contact creation process.
     */
    public void UndoLiteCreation() {
        ViewObjectImpl C = this.getContactos1();
        Row CRow = C.getCurrentRow();
        CRow.remove();
        C.getDBTransaction().commit();
    }

    /*
 * End of Undo Methods
 */

    /*
 * Removal methods
 */

    /**
     *Method that will invoke the PLSQL DELETECOMAPNY that will remove the a company
     * from the database, the company ID must be supplied
     * @param EID - The company ID
     */
    public void RemoveCompany(Number EID) {
        IStoredProc proc = StoredProc.getStoredProc(this.getDBTransaction(), "DELETECOMPANY");
        proc.setNumberValue("EID", EID);
        proc.execute();
        this.getDBTransaction().commit();
    }

    /**
     *Method that will invoke the PLSQL DELETECONTACT that will remove the a company
     * from the database, the contact ID must be supplied
     * @param CID - The contact ID
     */
    public void RemoveContact(Number CID) {
        IStoredProc proc = StoredProc.getStoredProc(this.getDBTransaction(), "DELETECONTACT");
        proc.setNumberValue("CID", CID);
        proc.execute();
        this.getDBTransaction().commit();
    }

    /**
     *Method that will invoke the PLSQL LINK that will remove the a entry from the CONTACTOS_POR_EMPRESA table
     * the company and contact ID's must be supplied
     * @param CID - The contact ID
     * @param EID - The company ID
     */
    public void RemoveLink(Number CID, Number EID) {
        IStoredProc proc = StoredProc.getStoredProc(this.getDBTransaction(), "DELETELINK");
        proc.setNumberValue("CID", CID);
        proc.setNumberValue("EID", EID);
        proc.execute();
        this.getDBTransaction().commit();
    }

    /**
     *Method that will invoke the PLSQL DELETEMORADA that will remove the a morada
     * @param MID - The Morada ID
     */
    public void RemoveAddress(Number MID) {
        IStoredProc proc = StoredProc.getStoredProc(this.getDBTransaction(), "DELETEMORADA");
        proc.setNumberValue("MID", MID);
        proc.execute();
        this.getDBTransaction().commit();
    }

    /**
     *Method that will invoke the PLSQL DELETEINSTALACAI that will remove the a entry from the INSTALACOES table
     * @param MID - The morada ID
     * @param EID - The company ID
     */
    public void RemoveInstalacao(Number MID, Number EID) {
        IStoredProc proc = StoredProc.getStoredProc(this.getDBTransaction(), "DELETEINSTALACAO");
        proc.setNumberValue("EID", EID);
        proc.setNumberValue("MID", MID);
        System.out.println(EID + " " + MID);
        proc.execute();
        this.getDBTransaction().commit();
    }

    /*
 * End of Removal Methods
 */

    /*
 * Start of the search method
 */
    /**
     * Este metodo é o responsavel por fazer a pagina principal mostrar o resultado
     * pretendido quando é efectuada a pesquisa
     * @param CID - O ID do contacto encontrado
     */
    public void executeSearch(Number CID) {
        ViewObjectImpl contactos = this.getContactos1();
        contactos.setApplyViewCriteriaName("FindCID");
        contactos.setNamedWhereClauseParam("FoundCID", CID);
        contactos.executeQuery();
    }
    /**
     * Este metodo é responsavel por fazer a visualização da pagina principal voltar ao normal
     */
    public void resetSearch() {
        ViewObjectImpl contactos = this.getContactos1();
        ViewCriteria vc = contactos.getViewCriteria("FindCID");
        /*     vc.reset();
        vc.clear(); */
        contactos.removeApplyViewCriteriaName("FindCID");
        /* contactos.clearViewCriterias(); */
        /*         contactos.removeViewCriteria("FindCID"); */
        contactos.executeQuery();

    }

    /*
 * Helper Methods
 * Estes metodos serviram para auxiliar o desenvolvimento do codigo existente nesta pagina
 */

    public void writeCEAtributes() {
        ViewObjectImpl ce = this.getContactosPorEmpresa1();
        Row ceRow = ce.getCurrentRow();
        String[] names = ceRow.getAttributeNames();
        for (int i = 0; i < names.length; i++) {
            System.out.println("ContatosPorEmpresa atributes names :" + names[i]);
        }
    }

    public void writeEAtributes() {
        ViewObjectImpl e = this.getEmpresa1();
        Row eRow = e.getCurrentRow();
        String[] names = eRow.getAttributeNames();
        for (int i = 0; i < names.length; i++) {
            System.out.println("Empresa atribute names: " + names[i]);
        }
    }

    public void writeCAtributes() {
        ViewObjectImpl c = this.getContactos1();
        Row cRow = c.getCurrentRow();
        String[] names = cRow.getAttributeNames();
        for (int i = 0; i < names.length; i++) {
            System.out.println("Contacto atribute names: " + names[i]);
        }
    }

    /*
 * End of Helper Methods
 */

    /**
     * Container's getter for Status1.
     * @return Status1
     */
    public ViewObjectImpl getStatus1() {
        return (ViewObjectImpl)findViewObject("Status1");
    }

    public BindingContainer getBindings() {
        return BindingContext.getCurrent().getCurrentBindingsEntry();
    }

    /**
     * Container's getter for Empresa2.
     * @return Empresa2
     */
    public ViewObjectImpl getEmpresa2() {
        return (ViewObjectImpl)findViewObject("Empresa2");
    }

    /**
     * Container's getter for CPE_E_VL1.
     * @return CPE_E_VL1
     */
    public ViewLinkImpl getCPE_E_VL1() {
        return (ViewLinkImpl)findViewLink("CPE_E_VL1");
    }

    /**
     * Container's getter for Search_Contact_Full1.
     * @return Search_Contact_Full1
     */
    public ViewObjectImpl getSearch_Contact_Full1() {
        return (ViewObjectImpl)findViewObject("Search_Contact_Full1");
    }
}
